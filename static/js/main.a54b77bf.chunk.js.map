{"version":3,"sources":["Components/Square.js","Components/Board.js","Components/Game.js","helpers.js","App.js","index.js"],"names":["style","background","border","fontSize","fontWeight","cursor","outline","Square","onClick","value","borderRadius","width","height","margin","display","gridTemplate","Board","squares","map","square","i","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","timeInHistory","slice","current","className","_step","move","destination","step","fontFamily","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAEMA,EAAQ,CACVC,WAAY,UACZC,OAAQ,qBACRC,SAAU,OACVC,WAAY,MACZC,OAAQ,UACRC,QAAS,QAGE,SAASC,EAAT,GAAmC,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,MACrC,OACI,wBAAQT,MAAOA,EAAOQ,QAASA,EAA/B,SACKC,ICXb,IAAMT,EAAQ,CACVE,OAAQ,qBACRQ,aAAc,OACdC,MAAO,QACPC,OAAQ,QACRC,OAAQ,aACRC,QAAS,OACTC,aAAc,mCAGH,SAASC,EAAT,GAAoC,IAApBC,EAAmB,EAAnBA,QAAST,EAAU,EAAVA,QACpC,OACI,qBAAKR,MAAOA,EAAZ,SACKiB,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACT,cAACb,EAAD,CAAgBE,MAAOU,EAAQX,QAAS,kBAAMA,EAAQY,KAAzCA,Q,MCXd,SAASC,IAGpB,MAA8BC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QAAtD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEMC,ECdH,SAAyBd,GAW5B,IAVA,IAAMe,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEDZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CACpC,kBAAkBY,EAAMZ,GAAxB,GAAOc,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAInB,EAAQiB,IAAMjB,EAAQiB,KAAOjB,EAAQkB,IAAMlB,EAAQiB,KAAOjB,EAAQmB,GAClE,OAAOnB,EAAQiB,GAGvB,OAAO,KDHQG,CAAgBZ,EAAQE,IAkCvC,OACI,qCACI,cAACX,EAAD,CAAOC,QAASQ,EAAQE,GAAanB,QAjC7C,SAAqBY,GACjB,IAAMkB,EAAgBb,EAAQc,MAAM,EAAGZ,EAAa,GAC9Ca,EAAUF,EAAcX,GACxBV,EAAO,YAAOuB,GAEhBT,GAAUd,EAAQG,KAEtBH,EAAQG,GAAKS,EAAU,IAAM,IAC7BH,EAAW,GAAD,mBAAKY,GAAL,CAAoBrB,KAC9BW,EAAcU,EAAcL,QAC5BH,GAAYD,OAwBR,sBAAKY,UAAU,OAAf,UACI,4BAAIV,EAAS,WAAaA,EAAS,iBAAmBF,EAAU,IAAM,OAf9EJ,EAAQP,KAAI,SAACwB,EAAOC,GAChB,IAAMC,EAAcD,EAAI,qBAAiBA,GAAjB,cAExB,OACI,oBAAeF,UAAU,aAAzB,SACI,wBAAQA,UAAU,UAAUjC,QAAS,kBAXjDoB,EADYiB,EAYkDF,QAV9Db,EAAWe,EAAO,IAAM,GAF5B,IAAgBA,GAYA,SAA0DD,KADrDD,YEtCzB,IAAM3C,EAAQ,CACZa,OAAQ,IACRiC,WAAY,cAWCC,MARf,WACE,OACE,qBAAK/C,MAAOA,EAAZ,SACE,cAAC,EAAD,OCPNgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a54b77bf.chunk.js","sourcesContent":["import React from 'react';\n\nconst style = {\n    background: '#ff9966',\n    border: '2px solid darkblue',\n    fontSize: '30px',\n    fontWeight: '800',\n    cursor: 'pointer',\n    outline: 'none'\n};\n\nexport default function Square({onClick, value}) {\n    return (\n        <button style={style} onClick={onClick}>\n            {value}\n        </button>\n    )\n}\n","import React from 'react';\nimport Square from './Square';\n\nconst style = {\n    border: '4px solid darkblue',\n    borderRadius: '10px',\n    width: '350px',\n    height: '350px',\n    margin: '100px auto',\n    display: 'grid',\n    gridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)'\n};\n\nexport default function Board({squares, onClick}) {\n    return (\n        <div style={style}>\n            {squares.map((square, i) => (\n                <Square key={i} value={square} onClick={() => onClick(i)} />\n            ))}\n        </div>\n    )\n}\n\n","import React, { useState } from 'react';\nimport { calculateWinner } from '../helpers';\nimport Board from './Board';\nimport './Game.css'\n\n\nexport default function Game() {\n\n    //Board layout\n    const [history, setHistory] = useState([Array(9).fill(null)]);\n    const [stepNumber, setStepNumber] = useState(0);\n    //Winning board or not\n    const [xIsNext, setXisNext] = useState(true);\n\n    const winner = calculateWinner(history[stepNumber]);\n\n\n    function handleClick(i) {\n        const timeInHistory = history.slice(0, stepNumber + 1);\n        const current = timeInHistory[stepNumber];\n        const squares = [...current];\n        //If user clicks an occupied square or if game is won, return\n        if (winner || squares[i]) return;\n        //Put an X or an O in the clicked square\n        squares[i] = xIsNext ? 'X' : 'O';\n        setHistory([...timeInHistory, squares]);\n        setStepNumber(timeInHistory.length);\n        setXisNext(!xIsNext);\n    }\n\n    function jumpTo(step) {\n        setStepNumber(step);\n        setXisNext(step % 2 === 0);\n\n    }\n\n    const renderMoves = () => (\n        history.map((_step, move) => {\n            const destination = move ? `Go to move#${move}` : `Go to start`;\n            // console.log(`render is run`)\n            return (\n                <li key={move} className='buttonList'>\n                    <button className='buttons' onClick={() => jumpTo(move)}>{destination}</button>\n                </li>   \n            )\n        })\n    )\n\n    return (\n        <>\n            <Board squares={history[stepNumber]} onClick={handleClick} />\n            <div className='text'>\n                <p>{winner ? 'Winner: ' + winner : \"Next Player: \" + (xIsNext ? 'X' : 'O')}</p>\n                {renderMoves()}\n            </div>\n        </>\n    )\n}\n","export function calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n    for  (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n\n\n","import React from 'react';\nimport Game from './Components/Game';\n\nconst style = {\n  margin: \"0\",\n  fontFamily: 'sans-serif'\n}\n\nfunction App() {\n  return (\n    <div style={style}>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}